/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example

import aws.sdk.kotlin.services.bedrockruntime.BedrockRuntimeClient
import aws.sdk.kotlin.services.bedrockruntime.model.ContentBlock
import aws.sdk.kotlin.services.bedrockruntime.model.ConversationRole
import aws.sdk.kotlin.services.bedrockruntime.model.ConverseRequest
import aws.sdk.kotlin.services.bedrockruntime.model.Message

suspend fun main() {
    converse().also { println(it) }
}

suspend fun converse(): String {
    BedrockRuntimeClient { region = "sa-east-1" }.use { client ->
        val modelId = "anthropic.claude-3-haiku-20240307-v1:0"
        val prompt = "Describe the purpose of a 'hello world' program in one line."
        val message = Message {
            content = listOf(ContentBlock.Text(prompt))
            role = ConversationRole.User
        }

        val request = ConverseRequest {
            this.modelId = modelId
            messages = listOf(message)
            inferenceConfig {
                maxTokens = 500
                temperature = 0.5F
            }
        }

        runCatching {
            val response = client.converse(request)
            return response.output!!.asMessage().content.first().asText()
        }.getOrElse { error ->
            error.message?.let { e -> System.err.println("ERROR: Can't invoke '$modelId'. Reason: $e") }
            throw RuntimeException("Failed to generate text with model $modelId", error)
        }
    }
}